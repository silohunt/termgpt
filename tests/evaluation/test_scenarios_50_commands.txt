# Complex Command Evaluation Set - 50 Commands
# Designed to test edge cases and advanced scenarios beyond the original 30-command set

## System Monitoring & Performance (10 commands)
1. Find all processes consuming more than 500MB of memory and sort by CPU usage
2. Show network connections from the last hour that are still active, grouped by process
3. Monitor disk I/O for processes writing more than 10MB/sec to any filesystem
4. Find all zombie processes and their parent processes, show process tree
5. Display top 10 processes by memory usage, but exclude system processes and show full command line
6. Show all open file descriptors for processes using more than 100 file handles
7. Find processes that have been running for more than 7 days and consuming over 1GB RAM
8. Monitor real-time CPU usage per core and alert when any core exceeds 90% for 30 seconds
9. Show detailed network statistics for all interfaces, including packet errors and dropped packets
10. Find all processes listening on privileged ports (1-1024) and show their binary paths

## Advanced File Operations (10 commands)
11. Find all files larger than 1GB that haven't been accessed in the last 6 months, exclude system directories
12. Search for duplicate files based on content hash in the home directory, show sizes and paths
13. Find all executable files that are world-writable or owned by users other than root in system directories
14. Copy all configuration files (.conf, .cfg, .ini) modified in the last week to a backup directory with timestamp
15. Find all broken symbolic links in the entire filesystem and optionally remove them
16. Search for files containing sensitive data patterns (credit card numbers, SSNs) in user directories
17. Find all log files larger than 100MB that are older than 30 days and compress them with gzip
18. Locate all files with non-ASCII characters in filenames and rename them to ASCII equivalents
19. Find files that are taking up the most space in each subdirectory, show top 3 per directory
20. Search for recently modified files (last 24 hours) that contain specific error patterns in their content

## Network & Security (10 commands)
21. Scan local network for all active hosts and identify their operating systems and open ports
22. Monitor network traffic for suspicious patterns like port scanning or brute force attempts
23. Find all network services running on non-standard ports and check if they're properly firewalled
24. Analyze firewall logs for the most frequently blocked IP addresses in the last week
25. Check SSL certificate expiration dates for all HTTPS services on the local network
26. Monitor DNS queries for potential malware communication or data exfiltration attempts
27. Find all network interfaces in promiscuous mode and processes using them
28. Detect and analyze network connections to foreign countries or suspicious IP ranges
29. Monitor bandwidth usage per process and alert when any process exceeds 10Mbps sustained
30. Check for rogue DHCP servers or ARP spoofing attempts on the local network

## Text Processing & Data Analysis (10 commands)
31. Parse web server logs to find the top 20 IP addresses by request count, excluding static assets
32. Extract and analyze error patterns from multiple log files, group by error type and frequency
33. Process CSV files to find correlations between columns and generate statistical summaries
34. Search through code repositories for potential security vulnerabilities or coding anti-patterns
35. Analyze email headers to detect spam patterns and trace message routing paths
36. Extract structured data from PDF documents and convert to CSV format
37. Process JSON logs to find anomalous patterns or outliers in API response times
38. Search through database dumps for sensitive information and redact personal data
39. Analyze system configuration files for security misconfigurations or deprecated settings
40. Process large text files to find near-duplicate content using fuzzy matching algorithms

## System Administration & Automation (10 commands)
41. Create automated backup script that handles incremental backups with rotation and compression
42. Set up monitoring for disk space usage with email alerts when partitions exceed 85% full
43. Configure automatic log rotation for custom applications with size and age-based triggers
44. Create a system health check script that validates services, disk space, memory, and network connectivity
45. Implement automated cleanup of temporary files, old logs, and cache directories with safety checks
46. Set up automated security updates with rollback capability and service restart handling
47. Create a deployment script that handles database migrations, service restarts, and health checks
48. Implement automated SSL certificate renewal with validation and service reload
49. Create a disaster recovery script that backs up critical data and tests restore procedures
50. Set up automated system performance monitoring with historical data collection and alerting