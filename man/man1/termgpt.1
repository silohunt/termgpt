.\" Man page for termgpt
.TH TERMGPT 1 "2025" "TermGPT" "User Commands"
.SH NAME
termgpt \- platform-aware natural language to POSIX shell command converter
.SH SYNOPSIS
.B termgpt
.I "natural language request"
.br
.B termgpt
.RB [ --version | -V ]
.br
.B termgpt
.RB [ --model | -m ]
.br
.B termgpt
.RB [ --eval ]
.I "natural language request"
.br
.B termgpt init
.RB [ options ]
.br
.B termgpt shell
.RB [ options ]
.SH DESCRIPTION
.B termgpt
translates natural language descriptions into POSIX-compliant shell commands
using a local Large Language Model (LLM) via Ollama. The tool is platform-aware,
automatically detecting the operating system and available tools to generate
optimized commands for the target environment.
.PP
Key features include local inference for privacy, comprehensive safety validation,
intelligent post-processing with 95%+ success rate on practical commands,
platform-specific command optimization, and intelligent tool integration.
Commands are never executed automatically - they are always presented for
user review and confirmation.
.PP
The system includes a sophisticated post-processing pipeline that enhances LLM
output through context-aware corrections, complex command preservation, and
platform-specific optimizations. Performance has been validated through
comprehensive evaluation across 50+ complex scenarios.
.SH OPTIONS
.TP
.BR --version , -V
Display version information and exit
.TP
.BR --model , -m
Display current model configuration and exit
.TP
.BR --eval
Non-interactive evaluation mode that outputs only the generated command
without presenting the interactive menu. Used for testing and automation.
.TP
.I "natural language request"
The natural language description of the desired shell command
.SH INITIALIZATION
.B termgpt init
initializes and configures TermGPT on your system. It automatically detects
your platform, installs dependencies, downloads LLM models, and creates
configuration files.
.PP
.B Init options:
.TP
.BR --headless
Non-interactive mode using all defaults
.TP
.BR --model " MODEL"
Specify LLM model (default: codellama:7b-instruct)
.TP
.BR --path " PATH"
Override config path (default: ~/.config/termgpt)
.TP
.BR --reconfigure
Update existing configuration
.TP
.BR --check
Verify installation without making changes
.TP
.BR --force
Force re-download of models and dependencies
.SH INTERACTIVE SHELL
.B termgpt shell
starts an interactive REPL (Read-Eval-Print Loop) session for iterative
command development. The shell provides persistent sessions, command history,
and action shortcuts for enhanced productivity.
.PP
.B Shell options:
.TP
.BR --model " MODEL"
Specify LLM model for the session
.TP
.BR --history
Show recent session history on startup
.PP
.B Shell commands:
.TP
.I "natural language"
Generate shell commands from natural language descriptions
.TP
.BR .help , .h
Show available commands
.TP
.BR .quit , .exit , .q
Exit the shell (saves session)
.TP
.BR .history " [N]"
Show last N commands (default: 10)
.TP
.BR .copy , .c
Copy last generated command to clipboard
.TP
.BR .explain , .e
Open last generated command in explainshell.com
.TP
.BR .run , .r
Execute last generated command (with confirmation)
.TP
.BR .save " [NAME]" , .s
Save last generated command as an alias
.TP
.BR .aliases
List all saved command aliases
.TP
.BR .stats
Show session statistics
.TP
.BR .config
Show current configuration
.PP
Single-letter shortcuts (c, e, r, s, q, h) work when a command has been generated.
.SH INTERACTIVE MENU
After generating a command, termgpt presents an interactive menu with the
following options:
.TP
.B c
Copy the generated command to the clipboard using platform-appropriate tools:
pbcopy on macOS, xclip/xsel/wl-copy on Linux
.TP
.B e
Open the command in explainshell.com for detailed explanation using the
system's default URL handler (open on macOS, xdg-open on Linux)
.TP
.B q
Quit without taking any action
.SH PLATFORM AWARENESS
.B termgpt
automatically detects the operating system and available tools to provide
optimized command generation:
.PP
.B macOS Integration:
.IP \(bu 2
Uses pbcopy/pbpaste for clipboard operations
.IP \(bu 2
Uses 'open' command for files and URLs
.IP \(bu 2
Recommends Homebrew for package management
.IP \(bu 2
Suggests mdfind for Spotlight searches
.PP
.B Linux Integration:
.IP \(bu 2
Auto-detects xclip, xsel, or wl-copy for clipboard
.IP \(bu 2
Uses xdg-open for files and URLs
.IP \(bu 2
Detects package manager (apt, yum, pacman, etc.)
.IP \(bu 2
Optimizes for systemd service management
.PP
.B WSL Integration:
.IP \(bu 2
Automatic WSL detection via /proc/version
.IP \(bu 2
Optimized model recommendations for limited resources
.IP \(bu 2
Performance-aware default settings
.SH FILES
.TP
.I /usr/local/lib/termgpt/termgpt-check.sh
Library for command validation
.TP
.I /usr/local/lib/termgpt/termgpt-platform.sh
Platform detection and tool mapping library
.TP
.I /usr/local/share/termgpt/rules.txt
System-wide dangerous command patterns
.TP
.I ~/.config/termgpt/platform.conf
User-specific platform configuration (generated by setup)
.TP
.I ~/.config/termgpt/rules.txt
User-specific command patterns (optional, overrides system rules)
.TP
.I ~/.config/termgpt/lib/
User-specific libraries (for user installations)
.SH ENVIRONMENT
.TP
.B TERMGPT_PLATFORM
Override detected platform (macos, linux, etc.)
.TP
.B TERMGPT_RULES_PATH
Override the default rules file location
.TP
.B TERMGPT_MODEL
Override the default LLM model (default: codellama:7b-instruct)
.TP
.B TERMGPT_DISABLE_POSTPROCESSING
Set to "1" to disable the post-processing pipeline, useful for evaluation
and testing purposes to compare raw LLM output with enhanced results
.SH EXAMPLES
.TP
Initialize TermGPT with default settings:
.B termgpt init
.TP
Initialize with specific model:
.B termgpt init --model codellama:13b
.TP
Check installation status:
.B termgpt init --check
.TP
Generate a command to list all Python files:
.B termgpt "list all python files"
.TP
Generate a command to find large files:
.B termgpt "find files larger than 100MB"
.TP
Generate a command to compress a directory:
.B termgpt "create a tar.gz archive of the docs folder"
.TP
Non-interactive evaluation mode:
.B termgpt --eval "find all log files larger than 100MB"
.PP
.B Platform-specific examples:
.TP
Copy directory path to clipboard (adapts to platform):
.B termgpt "copy current directory path to clipboard"
.br
macOS result: pwd | pbcopy
.br
Linux result: pwd | xclip -selection clipboard
.TP
Open file manager (adapts to platform):
.B termgpt "open current directory in file manager"
.br
macOS result: open .
.br
Linux result: xdg-open .
.SH DEPENDENCIES
.TP
.B Ollama
Local LLM server (https://ollama.ai)
.TP
.B codellama:7b-instruct
Default LLM model with excellent instruction following and platform awareness
.TP
.B qwen2.5-coder:7b
Alternative coding model with good performance/memory ratio
.TP
.B stable-code:3b
Lightweight model for WSL and resource-constrained systems
.TP
.B jq
Command-line JSON processor
.TP
.B curl
Command-line HTTP client
.TP
.B python3
For accurate token counting and URL encoding (recommended for optimal performance)
.SH EXIT STATUS
.TP
.B 0
Successful execution
.TP
.B 1
Error occurred (missing dependencies, API failure, etc.)
.SH SECURITY
TermGPT includes comprehensive safety checks to prevent execution of
dangerous commands. The rules file contains patterns for:
.IP \(bu 2
File system destruction (rm -rf /, dd to devices)
.IP \(bu 2
System modifications (kernel parameters, boot files)
.IP \(bu 2
Network attacks and unauthorized access
.IP \(bu 2
Resource exhaustion (fork bombs, memory filling)
.PP
Commands are checked but never executed automatically. Users must
manually review and execute any generated commands.
.SH SEE ALSO
.BR ollama (1),
.BR jq (1),
.BR curl (1)
.SH BUGS
Report bugs at: https://github.com/silohunt/termgpt/issues
.SH AUTHOR
TermGPT was created for safe, local natural language to shell command
translation.
.SH COPYRIGHT
This is free software; see the source for copying conditions.